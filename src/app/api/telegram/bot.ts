import TelegramBot from "node-telegram-bot-api";
import dotenv from "dotenv";

dotenv.config();

// –û—Ä—á–Ω—ã–≥ —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ—Ö
const env = process.env.VERCEL_ENV || "development";
const isDev = env === "development";
const isStaging = env === "preview"; // Vercel preview –æ—Ä—á–∏–Ω
const isProd = env === "production";

// Bot token —É–Ω—à–∏—Ö (–æ—Ä—á–∏–Ω –±“Ø—Ä—Ç Vercel-—ç—ç—Å –∏—Ä–Ω—ç)
const botToken = process.env.TELEGRAM_BOT_TOKEN;

if (!botToken) {
  throw new Error(
    `‚ùå TELEGRAM_BOT_TOKEN (${env} –æ—Ä—á–∏–Ω–¥) —Ç–æ—Ö–∏—Ä—É—É–ª–∞–≥–¥–∞–∞–≥“Ø–π –±–∞–π–Ω–∞.`,
  );
}

// Bot instance “Ø“Ø—Å–≥—ç—Ö
let botInstance: TelegramBot | null = null;

export const getBot = (): TelegramBot => {
  if (!botInstance) {
    // Dev –±–æ–ª–æ–Ω Staging –¥—ç—ç—Ä polling, Production –¥—ç—ç—Ä webhook
    botInstance = new TelegramBot(botToken, {
      polling: isDev || isStaging, // Dev —ç—Å–≤—ç–ª Staging –±–æ–ª polling
    });
    setupBot(botInstance);
  }
  return botInstance;
};

async function setupBot(bot: TelegramBot) {
  if (isDev || isStaging) {
    await initializePolling(bot);
  } else if (isProd) {
    await initializeWebhook(bot);
  }

  bot.on("polling_error", (err) =>
    console.error(`[${env}] Polling error:`, err),
  );
  bot.on("webhook_error", (err) =>
    console.error(`[${env}] Webhook error:`, err),
  );
}

async function initializePolling(bot: TelegramBot) {
  try {
    await bot.getMe();
    console.log(`[${env}] Stopping any existing polling...`);
    await bot.stopPolling(); // –•—É—É—á–∏–Ω polling-–≥ –∑–æ–≥—Å–æ–æ
    console.log(`[${env}] Starting new polling...`);
    await bot.startPolling({ restart: true }); // –®–∏–Ω—ç—ç—Ä —ç—Ö–ª“Ø“Ø–ª
    console.log(`[${env}] ‚úÖ Polling started successfully`);
  } catch (err) {
    console.error(`[${env}] ‚ùå Polling —ç—Ö–ª“Ø“Ø–ª—ç—Ö—ç–¥ –∞–ª–¥–∞–∞:`, err);
  }
}

async function initializeWebhook(bot: TelegramBot) {
  const baseUrl = process.env.PRODUCTION_URL; // Production-–¥ —Ç–æ–≥—Ç–º–æ–ª URL
  const webhookUrl = `${baseUrl}/api/telegram/telegram-webhook`;

  try {
    await bot.deleteWebHook();
    await bot.setWebHook(webhookUrl);
    console.log(`[${env}] üöÄ Telegram webhook set to: ${webhookUrl}`);
  } catch (err) {
    console.error(`[${env}] ‚ùå Webhook —Ç–æ—Ö–∏—Ä—É—É–ª–∞—Ö “Ø–µ–¥ –∞–ª–¥–∞–∞:`, err);
  }
}

const bot = getBot();
export { bot };
